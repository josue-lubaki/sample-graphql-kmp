[versions]
activityCompose = "1.7.2"
agp = "8.0.2"
appcompat = "1.6.1"
coreKtx = "1.12.0"
composeVersion = "1.5.2"
kotlin = "1.9.10"
konfigVersion = "0.13.3"
mokoResourcesVersion = "0.23.0"
precomposeVersion = "1.5.2"
atomicfu = "0.21.0"
apolloGraphQLVersion = "3.8.2"
koinVersion = "3.4.2"
ktorVersion = "2.3.2"

[libraries]
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }

# Moko-resources (https://github.com/icerockdev/moko-resources)
moko-resources = { group = "dev.icerock.moko", name = "resources", version.ref = "mokoResourcesVersion" }
moko-resources-compose = { group = "dev.icerock.moko", name = "resources-compose", version.ref = "mokoResourcesVersion" }
resources-generator = { module = "dev.icerock.moko:resources-generator", version.ref = "mokoResourcesVersion" }

# BuildKonfig (https://github.com/yshrsmz/BuildKonfig)
konfigPlugin = { group = "com.codingfeline.buildkonfig", name = "buildkonfig-gradle-plugin", version.ref = "konfigVersion" }

# Precompose (https://github.com/Tlaster/PreCompose)
precompose = { group = "moe.tlaster", name = "precompose", version.ref = "precomposeVersion" }
precompose-viewmodel = { group = "moe.tlaster", name = "precompose-viewmodel", version.ref = "precomposeVersion" }
precompose-koin = { group = "moe.tlaster", name = "precompose-koin", version.ref = "precomposeVersion" }

# Koin
koin-core = { group = "io.insert-koin", name = "koin-core", version.ref = "koinVersion" }
koin-compose = { group = "io.insert-koin", name = "koin-compose", version = "1.0.4" }
koin-android = { group = "io.insert-koin", name = "koin-android", version.ref = "koinVersion" }
koin-androidx-compose = { group = "io.insert-koin", name = "koin-androidx-compose", version.ref = "koinVersion" }

# Ktor
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktorVersion" }
ktor-client-android = { group = "io.ktor", name = "ktor-client-android", version.ref = "ktorVersion" }
ktor-client-darwin = { group = "io.ktor", name = "ktor-client-darwin", version.ref = "ktorVersion" }
ktor-client-ios = { group = "io.ktor", name = "ktor-client-ios", version.ref = "ktorVersion" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktorVersion" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktorVersion" }
ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktorVersion" }
ktor-okhttp = { group = "io.ktor", name = "ktor-client-okhttp", version.ref = "ktorVersion" }

# Apollo
apollo-runtime = { group = "com.apollographql.apollo3", name = "apollo-runtime", version.ref = "apolloGraphQLVersion" }
apollo-normalized-cache = { group = "com.apollographql.apollo3", name = "apollo-normalized-cache", version.ref = "apolloGraphQLVersion"}

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
library = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "composeVersion" }
konfig = { id = "com.codingfeline.buildkonfig", version.ref = "konfigVersion" }
mokoResources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "mokoResourcesVersion" }
apolloGraphQL = { id = "com.apollographql.apollo3", version.ref = "apolloGraphQLVersion" }